{"version":3,"sources":["components/Cell.js","components/Grid.js","components/PlayButtons.js","components/Display.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","row","col","state","react_default","a","createElement","className","boxClassName","id","onClick","Component","Grid","console","log","width","cols","arrCells","i","rows","j","boxId","grid","push","components_Cell","key","style","PlayButtons","handlePlay","handlePause","handleStop","arrayClone","arr","JSON","parse","stringify","Display","setState","clearInterval","interval","setInterval","start","speed","g","g2","neighbors","generation","Array","fill","map","continueAnimation","_this2","requestAnimationFrame","timestamp","onAnimFrame","_this3","components_Grid","components_PlayButtons","Home","reactstrap_es","xs","components_Display","target","rel","href","App","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f32d1a36.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './components.css';\n\nclass Cell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClick = () => {\n        this.props.handleClick(this.props.row, this.props.col);\n    }\n\n    render() {\n        return (\n            <div\n                className={this.props.boxClassName}\n                id={this.props.id}\n                onClick={this.handleClick}\n            />\n        );\n    }\n}\n\nexport default Cell;","import React, { Component } from 'react';\nimport './components.css';\nimport Cell from './Cell';\n\nclass Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        console.log('Grid props: ', this.props)\n        const width = (this.props.cols * 14);\n        let arrCells = [];\n        let boxClassName = \"\";\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.cols; j++) {\n                let boxId = i + '-' + j;\n\n                boxClassName = this.props.grid[i][j] ? \"cell black\" : \"cell white\";\n                arrCells.push(\n                    <Cell\n                        boxClassName={boxClassName}\n                        key={boxId}\n                        boxId={boxId}\n                        row={i}\n                        col={j}\n                        handleClick={this.props.handleClick}\n                    />\n                );\n            }\n        }\n        return (\n            <div>\n                <div className='grid' style={{ width: width }}>\n                    {arrCells}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Grid;","import React, { Component } from 'react';\n\nclass PlayButtons extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n            <div className=\"thirtyPer displayFlex\">\n                <button className='playB' onClick={this.props.handlePlay}>Play</button>\n                <button className='playB' onClick={this.props.handlePause}>Pause</button>\n                <button className='playB' onClick={this.props.handleStop}>Clear</button>\n            </div>\n        );\n    }\n}\n\nexport default PlayButtons;","import React, { Component } from 'react';\nimport Grid from './Grid';\nimport PlayButtons from './PlayButtons';\nimport './components.css';\n\n// const width = 400;\n// const height = 400;\n\nclass Display extends Component {\n    /**\n     * Constructor\n     */\n    constructor() {\n        super();\n\n        this.continueAnimation = true;\n        this.speed = 100;\n        this.rows = 30;\n        this.cols = 30;\n        this.state = {\n            generation: 0,\n            grid: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n        }\n    }\n\n    /**\n     * After the component has mounted\n     */\n    componentDidMount() {\n        // Request initial animation frame\n        requestAnimationFrame((timestamp) => { this.onAnimFrame(timestamp); });\n        // this.onAnimFrame();\n    }\n\n    /**\n     * When the component is about to unmount\n     */\n    componentWillUnmount() {\n        // Stop animating\n        this.continueAnimation = false;\n    }\n\n    /**\n     * Called every frame of animation\n     */\n\n    onAnimFrame(timestamp) {\n        // If desired, request another anim frame for later\n        if (this.continueAnimation) {\n            requestAnimationFrame((timestamp) => { this.onAnimFrame(timestamp); });\n        }\n\n        // TODO animate stuff\n    }\n\n    handleClick = (row, col) => {\n        let grid = arrayClone(this.state.grid);\n        grid[row][col] = !grid[row][col];\n        this.setState({ grid })\n    }\n    handlePlay = () => {\n        clearInterval(this.interval)\n        this.interval = setInterval(this.start, this.speed);\n        this.start();\n    }\n    start = () => { // \n        let g = this.state.grid;\n        let g2 = arrayClone(this.state.grid);\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                let neighbors = 0;\n                if (i > 0) if (g[i - 1][j]) neighbors++;\n                if (i > 0 && j > 0) if (g[i - 1][j - 1]) neighbors++;\n                if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) neighbors++;\n                if (j < this.cols - 1) if (g[i][j + 1]) neighbors++;\n                if (j > 0) if (g[i][j - 1]) neighbors++;\n                if (i < this.rows - 1) if (g[i + 1][j]) neighbors++;\n                if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) neighbors++;\n                if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) neighbors++;\n                if (g[i][j] && (neighbors < 2 || neighbors > 3)) g2[i][j] = false;\n                if (!g[i][j] && neighbors === 3) g2[i][j] = true;\n            }\n        }\n        this.setState({\n            grid: g2,\n            generation: this.state.generation + 1\n        });\n    }\n    handlePause = () => {\n        clearInterval(this.interval);\n    }\n    handleStop = () => {\n        this.setState({\n            grid: Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\n            generation: 0\n        })\n    }\n    /**\n     * Render the canvas\n     */\n    render() {\n        return (\n            <div>\n                {/* <canvas ref=\"canvas\" width={width} height={height} /> */}\n                <Grid\n                    grid={this.state.grid}\n                    rows={this.rows}\n                    cols={this.cols}\n                    handleClick={this.handleClick}\n                />\n                <PlayButtons\n                    handlePlay={this.handlePlay}\n                    handlePause={this.handlePause}\n                    handleStop={this.handleStop}\n                />\n                <h4>Generations: {this.state.generation}</h4>\n            </div>\n        );\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr));\n}\n\nexport default Display;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Display from './Display';\nimport './components.css';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n            <Container className='containerWrapper'>\n                <Row>\n                    <Col><h2>Conway's Game of Life</h2></Col>\n                </Row>\n                <Row className='displayFlex'>\n                    <Col xs=\"6\" className='centerContent'><h3>Generation: #</h3></Col>\n                    <Col xs=\"6\" className='centerContent'><h3>Rules</h3></Col>\n                </Row>\n                <Row className='displayFlex'>\n                    <Col xs=\"3\">\n                        <Display /></Col>\n                    <Col xs=\"2\" className='dirColumn'>\n                        <button className='presetBut'>Preset 1</button>\n                        <button className='presetBut'>Preset 2</button>\n                        <button className='presetBut'>Preset 3</button>\n                        <button className='presetBut'>Preset 4</button>\n                    </Col>\n                    <Col xs=\"7\" className=\"rulesArea\">\n                        <ul>\n                            <li>If the cell is alive and has 2 or 3 neighbors, then it remains alive. Else it dies.</li>\n                            <li>If the cell is dead and has exactly 3 neighbors, then it comes to life. Else if remains dead.</li>\n                        </ul>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"3\" className='thirtyPer displayFlex'>\n                        {/* <button className='playB'>Play</button>\n                        <button className='playB'>Pause</button>\n                        <button className='playB'>Stop</button> */}\n                    </Col>\n                    <Col xs=\"9\"></Col>\n                </Row>\n                <Row>\n                    <Col><h3>About this Algorithm:</h3></Col>\n                </Row>\n                <Row>\n                    <Col><quote>The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\n\nThe game is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input. One interacts with the Game of Life by creating an initial configuration and observing how it evolves, or, for advanced players, by creating patterns with particular properties.</quote>\n                        <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" className='wikilink'>wikipedia</a></p></Col>\n                </Row>\n\n            </Container>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Home />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}